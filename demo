<nav class="navbar navbar-expand-lg bg-body-tertiary">
  <div class="container-fluid">
    <a class="navbar-brand" routerLink="/welcome">Home</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavDropdown">
     <ul class="navbar-nav">
      
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" routerLink="/getallpolicy" id="customerDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Policies
          </a>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="customerDropdown">
            <li><a class="dropdown-item" routerLink="/savepolicy">Add Policy</a></li>
            <li><a class="dropdown-item" routerLink="/updatepolicy">Update Policy</a></li>
            <li><a class="dropdown-item" routerLink="/getpolicybyid">Search Policy</a></li>
            <li><a class="dropdown-item" routerLink="/getagentbypolicyid">Get Agent By Policy</a></li>
            <li><a class="dropdown-item" routerLink="/getcustomerbypolicyid">Get Customer By Policy</a></li>
            <li><a class="dropdown-item" routerLink="/deletepolicy">Delete Policy</a></li>
          </ul>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" routerLink="/getallagents" id="customerDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Agents
          </a>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="customerDropdown">
            <li><a class="dropdown-item" routerLink="/addagent">Add Agent</a></li>
            <li><a class="dropdown-item" routerLink="/updateagent">Update Agent</a></li>
            <li><a class="dropdown-item" routerLink="/getagentbyid">Search Agent</a></li>
            <li><a class="dropdown-item" routerLink="/getagentsbypolicyid">Get Agent By Policy Id</a></li>
            <li><a class="dropdown-item" routerLink="/deleteagent">Delete Agent</a></li>
          </ul>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" routerLink="/getallclaim" id="customerDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Claims
          </a>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="customerDropdown">
            <li><a class="dropdown-item" routerLink="/addclaim">Add Claim</a></li>
            <li><a class="dropdown-item" routerLink="/updateclaim">Update Claim</a></li>
            <li><a class="dropdown-item" routerLink="/getclaimbyid">Search Claim</a></li>
            <li><a class="dropdown-item" routerLink="/trackclaim">Track Claim</a></li>
            <li><a class="dropdown-item" routerLink="/deleteclaim">Delete Claim</a></li>
          </ul>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" routerLink="/getallcustomers" id="customerDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Customer
          </a>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="customerDropdown">
            <li><a class="dropdown-item" routerLink="/addcustomer">Add Customer</a></li>
            <li><a class="dropdown-item" routerLink="/updatecustomer">Update Customer</a></li>
            <li><a class="dropdown-item" routerLink="/getcustomerbyid">Search Customer</a></li>
            <li><a class="dropdown-item" routerLink="/getcustomersbypolicyid">Get Customers By Policy</a></li>
          </ul>
        </li>
        @if(isLoggedIn){
        <li class="nav-item">
          <a class="nav-link" routerLink="/login">Login</a>
        </li>
      }
      @if(isLoggedIn){
        <li class="nav-item">
          <a class="nav-link" routerLink="/register">Register</a>
        </li>
      }
      @if(!isLoggedIn){
        <li class="nav-item">
          <a class="nav-link" (click)="logout()">Logout</a>
        </li>
      }
      </ul>
    </div>
  </div>
</nav>
<router-outlet/>



import { Component } from '@angular/core';
import { RouterOutlet, Router, RouterLink } from '@angular/router';
import { LoginComponent } from './login/login.component';
import { RegisterComponent } from './register/register.component';
import { WelcomeComponent } from './welcome/welcome.component';
import { AddcustomerComponent } from './customer/addcustomer/addcustomer.component';
import { UpdateCustomerComponent } from './customer/updatecustomer/updatecustomer.component';
import { GetcustomerbyidComponent } from './customer/getcustomerbyid/getcustomerbyid.component';
import { GetallcustomersComponent } from './customer/getallcustomers/getallcustomers.component';
import { DeletecustomerComponent } from './customer/deletecustomer/deletecustomer.component';
import { AddagentComponent } from './agent/addagent/addagent.component';
import { UpdateagentComponent } from './agent/updateagent/updateagent.component';
import { DeleteagentComponent } from './agent/deleteagent/deleteagent.component';
import { GetagentbypolicyidComponent } from './policy/getagentbypolicyid/getagentbypolicyid.component';
import { GetallagentsComponent } from './agent/getallagents/getallagents.component';
import { SearchagentComponent } from './agent/searchagent/searchagent.component';
import { AddclaimComponent } from './claim/addclaim/addclaim.component';
import { DeleteclaimComponent } from './claim/deleteclaim/deleteclaim.component';
import { GetallclaimsComponent } from './claim/getallclaims/getallclaims.component';
import { GetclaimbyidComponent } from './claim/getclaimbyid/getclaimbyid.component';
import { UpdateclaimComponent } from './claim/updateclaim/updateclaim.component';
import { DeletepolicyComponent } from './policy/deletepolicy/deletepolicy.component';
import { GetagentsbypolicyidComponent } from './agent/getagentsbypolicyid/getagentsbypolicyid.component';
import { GetallpolicyComponent } from './policy/getallpolicy/getallpolicy.component';
import { GetpolicybyidComponent } from './policy/getpolicybyid/getpolicybyid.component';
import { SavepolicyComponent } from './policy/savepolicy/savepolicy.component';
import { UpdatepolicyComponent } from './policy/updatepolicy/updatepolicy.component';

import { LoginService } from './login-service.service';
import { GetCustomersByPolicyIdComponent } from './customer/get-customers-by-policy-id/get-customers-by-policy-id.component';

import { jwtDecode } from 'jwt-decode';
@Component({
  selector: 'app-root',
  imports: [RouterOutlet, LoginComponent, RouterLink, RegisterComponent, WelcomeComponent, AddcustomerComponent, UpdateCustomerComponent, GetcustomerbyidComponent, GetallcustomersComponent, DeletecustomerComponent, 
    AddagentComponent, UpdateagentComponent, DeleteagentComponent, GetagentbypolicyidComponent, GetallagentsComponent, SearchagentComponent,AddclaimComponent, DeleteclaimComponent, GetallclaimsComponent, 
    GetclaimbyidComponent, UpdateclaimComponent,DeletepolicyComponent, GetagentsbypolicyidComponent, GetallpolicyComponent,  GetpolicybyidComponent, SavepolicyComponent, UpdatepolicyComponent,GetCustomersByPolicyIdComponent],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'

})
export class AppComponent {
  title = 'IMS';
  isLoggedIn=true
 
  userRole:string=""
constructor(private router:Router,private authService:LoginService){
  this.extractRole();

   if(authService.getJWT())
 {
this.isLoggedIn=false
 }
}

extractRole(): void {
  const token = localStorage.getItem('JWT');
  if (token) {
    try {
      const decoded: any = jwtDecode(token);
      this.userRole = decoded.role || decoded.roles ||'';  // Assumes JWT contains 'role'
    } catch (err) {
      console.error('Failed to decode JWT', err);
    }
  }
}

 
logout()
 {
  this.authService.removeToken();
  this.isLoggedIn=true
  alert("logged out successfully")
  this.router.navigate(["/welcome"])
 }
 
}
 

